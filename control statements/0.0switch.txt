// switch statement 
switch(expression)
{
   // case statements
   // values must be of same type of expression
   case value1 :
      // Statements
      break; // break is optional
   
   case value2 :
      // Statements
      break; // break is optional
   
   // We can have any number of case statements
   // below is default statement, used when none of the cases is true. 
   // No break is needed in the default case.
   default : 
      // Statements
}



Some Important Rules for Switch Statements

There can be any number of cases just imposing condition check but remember 
duplicate case/s values are not allowed.

The value for a case must be of the same data type as the variable in the switch.
The value for a case must be constant or literal. Variables are not allowed.

The break statement is used inside the switch to terminate a statement sequence.
The break statement is optional. If omitted, execution will continue on into
 the next case.

The default statement is optional and can appear anywhere inside the switch block. 
In case, if it is not at the end, then a break statement must be kept after 


the default statement to omit the execution of the next case statement


Omitting the break Statement
A break statement is optional. 
If we omit the break, execution will continue on into the next case


Case label can be a constant expression
switch arguments can be a constant expression. 
switch argument can be a variable expression

Case label cannot be a variable or variable expression. 
It must be a constant expression.